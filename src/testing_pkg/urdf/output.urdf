<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from newRobot.urdf.xacro            | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="robot">
  <!-- Specify some standard inertial calculations https://en.wikipedia.org/wiki/List_of_moments_of_inertia -->
  <!-- These make use of xacro's mathematical functionality -->
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>
  <material name="orange">
    <color rgba="1 0.3 0.1 1"/>
  </material>
  <material name="blue">
    <color rgba="0.2 0.2 1 1"/>
  </material>
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>
  <material name="red">
    <color rgba="1 0 0 1"/>
  </material>
  <!-- BASE LINK -->
  <link name="base_link_robot1">

  </link>
  <!-- BASE_FOOTPRINT LINK -->
  <joint name="base_footprint_join_robot1" type="fixed">
    <parent link="base_link_robot1"/>
    <child link="base_footprint_robot1"/>
    <origin rpy="0 90 0" xyz="0 0 0"/>
  </joint>
  <link name="base_footprint_robot1">
  </link>
  <!-- Main Body -->
  <joint name="chassis_joint_robot1" type="fixed">
    <parent link="base_link_robot1"/>
    <child link="chassis_robot1"/>
    <origin xyz="0 0 0"/>
  </joint>
  <link name="chassis_robot1">
    <visual>
      <origin xyz="0.105 0 0.01"/>
      <geometry>
        <box size="0.21 0.16 0.02"/>
      </geometry>
      <material name="grey">
        <color rgba="0.5 0.5 0.5 1"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0.105 0 0.01"/>
      <geometry>
        <box size="0.21 0.16 0.02"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0.105 0 0.01"/>
      <mass value="0.3"/>
      <inertia ixx="0.00065" ixy="0.0" ixz="0.0" iyy="0.0011124999999999998" iyz="0.0" izz="0.0017425"/>
    </inertial>
  </link>
  <!-- Wheels -->
  <link name="left_wheel_robot1">
    <visual>
      <geometry>
        <cylinder length="0.02" radius="0.03"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.02" radius="0.03"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.05"/>
      <inertia ixx="1.2916666666666666e-05" ixy="0.0" ixz="0.0" iyy="1.2916666666666666e-05" iyz="0.0" izz="2.25e-05"/>
    </inertial>
  </link>
  <link name="right_wheel_robot1">
    <visual>
      <geometry>
        <cylinder length="0.02" radius="0.03"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.02" radius="0.03"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.05"/>
      <inertia ixx="1.2916666666666666e-05" ixy="0.0" ixz="0.0" iyy="1.2916666666666666e-05" iyz="0.0" izz="2.25e-05"/>
    </inertial>
  </link>
  <!-- Joints for Wheels -->
  <joint name="left_wheel_joint_robot1" type="continuous">
    <parent link="chassis_robot1"/>
    <child link="left_wheel_robot1"/>
    <origin rpy="1.57 0 0" xyz="0.04 -0.08 -0.03"/>
    <axis xyz="0 0 1"/>
  </joint>
  <joint name="right_wheel_joint_robot1" type="continuous">
    <parent link="chassis_robot1"/>
    <child link="right_wheel_robot1"/>
    <origin rpy="1.57 0 0" xyz="0.04 0.08 -0.03"/>
    <axis xyz="0 0 1"/>
  </joint>
  <gazebo reference="right_wheel_robot1">
    <mu1>0.7</mu1>
    <mu2>0.7</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>
  <gazebo reference="left_wheel_robot1">
    <mu1>0.7</mu1>
    <mu2>0.7</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>
  <!-- Lidar Sensor -->
  <joint name="laser_joint_robot1" type="fixed">
    <parent link="chassis_robot1"/>
    <child link="laser_frame_robot1"/>
    <origin rpy="0 3.14 0" xyz="0.03 0 0.03"/>
  </joint>
  <link name="laser_frame_robot1">
    <visual>
      <origin xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.02" radius="0.03"/>
      </geometry>
      <material name="black"/>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="7.583333333333335e-05" ixy="0.0" ixz="0.0" iyy="7.583333333333335e-05" iyz="0.0" izz="0.00012500000000000003"/>
    </inertial>
  </link>
  <gazebo reference="laser_frame_robot1">
    <sensor name="laser" type="ray">
      <pose> 0 0 0 0 0 0 </pose>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>30</samples>
            <resolution>1</resolution>
            <min_angle>-2.0944</min_angle>
            <max_angle>2.0944</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.04</min>
          <max>12</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="laser_controller">
        <topicName>robot1/scan</topicName>
        <frameName>laser_frame_robot1</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Caster Wheel -->
  <link name="caster_wheel_robot1">
    <visual>
      <geometry>
        <sphere radius="0.03"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.03"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.01"/>
      <inertia ixx="1.6000000000000001e-06" ixy="0.0" ixz="0.0" iyy="1.6000000000000001e-06" iyz="0.0" izz="1.6000000000000001e-06"/>
    </inertial>
  </link>
  <joint name="joint_caster_robot1" type="fixed">
    <parent link="chassis_robot1"/>
    <child link="caster_wheel_robot1"/>
    <origin rpy="0 0 0" xyz="0.16 0 -0.03"/>
  </joint>
  <gazebo reference="caster_wheel_robot1">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/FlatBlack</material>
  </gazebo>
  <!-- Control System -->
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <!-- Plugin update rate in Hz -->
      <updateRate>11</updateRate>
      <!-- Name of left joint, defaults to `left_joint` -->
      <leftJoint>left_wheel_joint_robot1</leftJoint>
      <!-- Name of right joint, defaults to `right_joint` -->
      <rightJoint>right_wheel_joint_robot1</rightJoint>
      <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
      <wheelSeparation>0.17</wheelSeparation>
      <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
      <wheelDiameter>0.06</wheelDiameter>
      <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
      <wheelAcceleration>0.1</wheelAcceleration>
      <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
      <wheelTorque>20</wheelTorque>
      <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
      <commandTopic>robot1/cmd_vel</commandTopic>
      <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
      <odometryTopic>robot1/odom</odometryTopic>
      <!-- Odometry frame, defaults to `odom` -->
      <odometryFrame>robot1/odom</odometryFrame>
      <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
      <robotBaseFrame>base_link_robot1</robotBaseFrame>
      <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
      <odometrySource>1</odometrySource>
      <!-- Set to true to publish transforms for the wheel links, defaults to false -->
      <publishWheelTF>false</publishWheelTF>
      <!-- Set to true to publish transforms for the odometry, defaults to true -->
      <publishOdom>true</publishOdom>
      <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
      <publishWheelJointState>true</publishWheelJointState>
      <!-- Set to true to swap right and left wheels, defaults to true -->
      <legacyMode>false</legacyMode>
    </plugin>
  </gazebo>
</robot>

